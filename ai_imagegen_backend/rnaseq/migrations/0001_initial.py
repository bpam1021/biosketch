# Generated by Django 5.2.5 on 2025-08-22 09:12

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('users', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AnalysisJob',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(default='RNA-seq Analysis Job', max_length=255)),
                ('description', models.TextField(blank=True)),
                ('dataset_type', models.CharField(choices=[('bulk', 'Bulk RNA-seq'), ('single_cell', 'Single-cell RNA-seq')], default='bulk', max_length=20)),
                ('organism', models.CharField(default='human', max_length=100)),
                ('selected_pipeline_stage', models.CharField(choices=[('upstream', 'Upstream Processing'), ('downstream', 'Downstream Analysis')], default='upstream', max_length=20)),
                ('is_multi_sample', models.BooleanField(default=False)),
                ('sample_count', models.IntegerField(default=1)),
                ('fastq_files', models.JSONField(default=list, help_text='List of FASTQ file pairs')),
                ('metadata_file', models.FileField(blank=True, max_length=500, null=True, upload_to='rnaseq/metadata/')),
                ('expression_matrix', models.FileField(blank=True, max_length=500, null=True, upload_to='rnaseq/matrices/')),
                ('expression_matrix_output', models.FileField(blank=True, max_length=500, null=True, upload_to='rnaseq/output_matrices/')),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('processing_upstream', 'Processing Upstream'), ('upstream_complete', 'Upstream Complete'), ('processing_downstream', 'Processing Downstream'), ('completed', 'Analysis Complete'), ('failed', 'Failed'), ('waiting_for_input', 'Waiting for User Input')], default='pending', max_length=30)),
                ('current_step', models.IntegerField(default=0)),
                ('current_step_name', models.CharField(blank=True, max_length=200)),
                ('progress_percentage', models.IntegerField(default=0)),
                ('total_steps', models.IntegerField(default=5)),
                ('job_config', models.JSONField(default=dict)),
                ('processing_config', models.JSONField(default=dict, help_text='Pipeline processing configuration')),
                ('num_samples', models.IntegerField(default=0)),
                ('total_reads', models.BigIntegerField(default=0)),
                ('mapped_reads', models.BigIntegerField(default=0)),
                ('alignment_rate', models.FloatField(default=0.0)),
                ('genes_quantified', models.IntegerField(default=0)),
                ('cells_detected', models.IntegerField(default=0)),
                ('cell_clusters', models.IntegerField(default=0)),
                ('significant_genes', models.IntegerField(default=0)),
                ('enriched_pathways', models.IntegerField(default=0)),
                ('results_file', models.FileField(blank=True, max_length=500, null=True, upload_to='rnaseq/results/')),
                ('visualization_image', models.ImageField(blank=True, max_length=500, null=True, upload_to='rnaseq/visualizations/')),
                ('qc_report', models.FileField(blank=True, max_length=500, null=True, upload_to='rnaseq/qc/')),
                ('upstream_results', models.JSONField(default=dict, help_text='Upstream processing results')),
                ('downstream_results', models.JSONField(default=dict, help_text='Downstream analysis results')),
                ('analysis_plots', models.JSONField(default=list, help_text='Generated visualization plots')),
                ('alignment_stats', models.JSONField(default=dict, help_text='Alignment statistics')),
                ('ai_chat_history', models.JSONField(default=list, help_text='AI chatbot conversation history')),
                ('user_hypothesis', models.TextField(blank=True)),
                ('current_user_input', models.TextField(blank=True)),
                ('waiting_for_input', models.BooleanField(default=False)),
                ('enable_ai_interpretation', models.BooleanField(default=True)),
                ('error_message', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('started_at', models.DateTimeField(blank=True, null=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rnaseq_jobs', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='AIInterpretation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('analysis_type', models.CharField(choices=[('pca_clustering', 'PCA and Clustering'), ('differential_expression', 'Differential Expression'), ('pathway_enrichment', 'Pathway Enrichment'), ('cell_clustering', 'Cell Clustering'), ('cell_type_annotation', 'Cell Type Annotation'), ('quality_control', 'Quality Control'), ('general_analysis', 'General Analysis')], max_length=50)),
                ('user_input', models.TextField(blank=True, help_text="User's question or hypothesis")),
                ('ai_response', models.TextField(help_text='AI-generated interpretation')),
                ('context_data', models.JSONField(default=dict, help_text='Analysis data used for interpretation')),
                ('confidence_score', models.FloatField(default=0.0, help_text='AI confidence in interpretation')),
                ('step_name', models.CharField(blank=True, max_length=200)),
                ('is_automatic', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('job', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ai_interpretations', to='rnaseq.analysisjob')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='RNASeqAIChat',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_message', models.TextField()),
                ('ai_response', models.TextField()),
                ('context_data', models.JSONField(default=dict, help_text='Analysis context for AI response')),
                ('context_type', models.CharField(default='general', max_length=50)),
                ('confidence_score', models.FloatField(default=0.0)),
                ('is_auto_generated', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('job', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ai_chats', to='rnaseq.analysisjob')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='RNASeqDataset',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('job', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='legacy_dataset', to='rnaseq.analysisjob')),
            ],
        ),
        migrations.CreateModel(
            name='PipelineStep',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('step_number', models.IntegerField()),
                ('step_name', models.CharField(max_length=200)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('running', 'Running'), ('completed', 'Completed'), ('failed', 'Failed'), ('skipped', 'Skipped')], default='pending', max_length=20)),
                ('input_files', models.JSONField(default=list)),
                ('output_files', models.JSONField(default=list)),
                ('parameters', models.JSONField(default=dict)),
                ('metrics', models.JSONField(default=dict)),
                ('started_at', models.DateTimeField(blank=True, null=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('duration_seconds', models.IntegerField(default=0)),
                ('error_message', models.TextField(blank=True)),
                ('job', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pipeline_steps', to='rnaseq.analysisjob')),
            ],
            options={
                'ordering': ['step_number'],
                'unique_together': {('job', 'step_number')},
            },
        ),
        migrations.CreateModel(
            name='RNASeqAnalysisResult',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('gene_id', models.CharField(max_length=100)),
                ('gene_name', models.CharField(blank=True, max_length=100)),
                ('log2_fold_change', models.FloatField(blank=True, null=True)),
                ('p_value', models.FloatField(blank=True, null=True)),
                ('adjusted_p_value', models.FloatField(blank=True, null=True)),
                ('base_mean', models.FloatField(blank=True, null=True)),
                ('chromosome', models.CharField(blank=True, max_length=10)),
                ('gene_type', models.CharField(blank=True, max_length=50)),
                ('description', models.TextField(blank=True)),
                ('cluster', models.CharField(blank=True, max_length=50)),
                ('cell_type', models.CharField(blank=True, max_length=100)),
                ('avg_log2fc', models.FloatField(blank=True, null=True)),
                ('pct_1', models.FloatField(blank=True, null=True)),
                ('pct_2', models.FloatField(blank=True, null=True)),
                ('job', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='analysis_results', to='rnaseq.analysisjob')),
            ],
            options={
                'indexes': [models.Index(fields=['gene_id'], name='rnaseq_rnas_gene_id_f99595_idx'), models.Index(fields=['p_value'], name='rnaseq_rnas_p_value_615615_idx'), models.Index(fields=['log2_fold_change'], name='rnaseq_rnas_log2_fo_bee44f_idx'), models.Index(fields=['cluster'], name='rnaseq_rnas_cluster_0e7462_idx')],
                'unique_together': {('job', 'gene_id', 'cluster')},
            },
        ),
        migrations.CreateModel(
            name='RNASeqCluster',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cluster_id', models.CharField(max_length=50)),
                ('cluster_name', models.CharField(blank=True, max_length=100)),
                ('cell_type', models.CharField(blank=True, max_length=100)),
                ('cell_count', models.IntegerField(default=0)),
                ('marker_genes', models.JSONField(default=list)),
                ('coordinates', models.JSONField(default=dict, help_text='UMAP/tSNE coordinates')),
                ('cluster_metadata', models.JSONField(default=dict, help_text='Additional cluster information')),
                ('quality_metrics', models.JSONField(default=dict, help_text='Cluster quality metrics')),
                ('job', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='clusters', to='rnaseq.analysisjob')),
            ],
            options={
                'unique_together': {('job', 'cluster_id')},
            },
        ),
        migrations.CreateModel(
            name='RNASeqPathwayResult',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pathway_id', models.CharField(max_length=100)),
                ('pathway_name', models.CharField(max_length=255)),
                ('database', models.CharField(choices=[('GO', 'Gene Ontology'), ('KEGG', 'KEGG'), ('REACTOME', 'Reactome'), ('HALLMARK', 'MSigDB Hallmark'), ('WIKIPATHWAYS', 'WikiPathways')], max_length=50)),
                ('p_value', models.FloatField()),
                ('adjusted_p_value', models.FloatField()),
                ('gene_count', models.IntegerField()),
                ('gene_list', models.JSONField(default=list)),
                ('enrichment_score', models.FloatField(blank=True, null=True)),
                ('pathway_description', models.TextField(blank=True)),
                ('pathway_category', models.CharField(blank=True, max_length=100)),
                ('job', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pathway_results', to='rnaseq.analysisjob')),
            ],
            options={
                'indexes': [models.Index(fields=['adjusted_p_value'], name='rnaseq_rnas_adjuste_f851ec_idx'), models.Index(fields=['database'], name='rnaseq_rnas_databas_3e6bd8_idx')],
                'unique_together': {('job', 'pathway_id', 'database')},
            },
        ),
        migrations.CreateModel(
            name='RNASeqPresentation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('included_sections', models.JSONField(default=dict, help_text='Which sections were included')),
                ('quality_level', models.CharField(default='medium', max_length=20)),
                ('job', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='presentations', to='rnaseq.analysisjob')),
                ('presentation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.presentation')),
            ],
            options={
                'unique_together': {('job', 'presentation')},
            },
        ),
    ]
