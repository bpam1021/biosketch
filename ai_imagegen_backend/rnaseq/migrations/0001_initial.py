# Generated by Django 4.2.7 on 2025-08-01 04:00

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('users', '0010_enhanced_presentation_features'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='RNASeqDataset',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True)),
                ('dataset_type', models.CharField(choices=[('bulk', 'Bulk RNA-seq'), ('single_cell', 'Single-cell RNA-seq')], default='bulk', max_length=20)),
                ('fastq_r1_file', models.FileField(blank=True, null=True, upload_to='rnaseq/fastq/')),
                ('fastq_r2_file', models.FileField(blank=True, null=True, upload_to='rnaseq/fastq/')),
                ('counts_file', models.FileField(blank=True, null=True, upload_to='rnaseq/counts/')),
                ('metadata_file', models.FileField(blank=True, null=True, upload_to='rnaseq/metadata/')),
                ('organism', models.CharField(default='human', max_length=100)),
                ('analysis_type', models.CharField(choices=[('differential', 'Differential Expression'), ('pathway', 'Pathway Analysis'), ('clustering', 'Clustering Analysis'), ('pca', 'PCA Analysis'), ('signature_correlation', 'Signature Correlation'), ('phenotype_correlation', 'Phenotype Correlation'), ('cell_type_annotation', 'Cell Type Annotation'), ('pseudotime', 'Pseudotime Analysis'), ('cell_communication', 'Cell-Cell Communication')], default='differential', max_length=50)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('processing_upstream', 'Processing Upstream'), ('upstream_complete', 'Upstream Complete'), ('processing_downstream', 'Processing Downstream'), ('completed', 'Completed'), ('failed', 'Failed')], default='pending', max_length=30)),
                ('start_from_upstream', models.BooleanField(default=True, help_text='Start from FASTQ files or use existing counts')),
                ('is_multi_sample', models.BooleanField(default=False)),
                ('sample_sheet', models.FileField(blank=True, null=True, upload_to='rnaseq/sample_sheets/')),
                ('batch_id', models.CharField(blank=True, help_text='Batch identifier for multi-sample runs', max_length=100)),
                ('qc_report', models.FileField(blank=True, null=True, upload_to='rnaseq/qc/')),
                ('trimmed_fastq_r1', models.FileField(blank=True, null=True, upload_to='rnaseq/trimmed/')),
                ('trimmed_fastq_r2', models.FileField(blank=True, null=True, upload_to='rnaseq/trimmed/')),
                ('alignment_bam', models.FileField(blank=True, null=True, upload_to='rnaseq/alignment/')),
                ('expression_matrix_tpm', models.FileField(blank=True, null=True, upload_to='rnaseq/expression/')),
                ('expression_matrix_counts', models.FileField(blank=True, null=True, upload_to='rnaseq/expression/')),
                ('generated_metadata', models.JSONField(default=dict, help_text='Metadata generated during upstream processing')),
                ('results_file', models.FileField(blank=True, null=True, upload_to='rnaseq/results/')),
                ('visualization_image', models.ImageField(blank=True, null=True, upload_to='rnaseq/visualizations/')),
                ('ai_interpretation', models.TextField(blank=True, help_text='AI-generated interpretation of results')),
                ('user_hypothesis', models.TextField(blank=True, help_text="User's hypothesis for analysis")),
                ('gene_signatures', models.JSONField(default=list, help_text='User-provided gene signatures')),
                ('phenotype_data', models.JSONField(default=dict, help_text='Phenotype data for correlation analysis')),
                ('processing_config', models.JSONField(default=dict, help_text='Pipeline processing configuration')),
                ('quality_thresholds', models.JSONField(default=dict, help_text='Quality control thresholds')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rnaseq_datasets', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='RNASeqAIInteraction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('interaction_type', models.CharField(choices=[('hypothesis_request', 'Hypothesis Request'), ('result_interpretation', 'Result Interpretation'), ('signature_analysis', 'Signature Analysis'), ('pathway_interpretation', 'Pathway Interpretation'), ('cell_type_suggestion', 'Cell Type Suggestion')], max_length=50)),
                ('user_input', models.TextField()),
                ('ai_response', models.TextField()),
                ('context_data', models.JSONField(default=dict)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('dataset', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ai_interactions', to='rnaseq.rnaseqdataset')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='AnalysisJob',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('analysis_type', models.CharField(choices=[('bulk_rnaseq', 'Bulk RNA-seq'), ('scrna_seq', 'Single-cell RNA-seq')], max_length=20)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('processing', 'Processing'), ('completed', 'Completed'), ('failed', 'Failed'), ('waiting_for_input', 'Waiting for User Input')], default='pending', max_length=30)),
                ('current_step', models.IntegerField(default=0)),
                ('current_step_name', models.CharField(blank=True, max_length=200)),
                ('progress_percentage', models.IntegerField(default=0)),
                ('job_config', models.JSONField(default=dict)),
                ('sample_files', models.JSONField(default=dict, help_text='Sample file paths and metadata')),
                ('sample_metadata', models.JSONField(default=dict, help_text='Sample metadata for analysis')),
                ('num_samples', models.IntegerField(default=0)),
                ('total_reads', models.BigIntegerField(default=0)),
                ('mapped_reads', models.BigIntegerField(default=0)),
                ('alignment_rate', models.FloatField(default=0.0)),
                ('genes_quantified', models.IntegerField(default=0)),
                ('cells_detected', models.IntegerField(default=0)),
                ('cell_clusters', models.IntegerField(default=0)),
                ('significant_genes', models.IntegerField(default=0)),
                ('enriched_pathways', models.IntegerField(default=0)),
                ('user_hypothesis', models.TextField(blank=True)),
                ('current_user_input', models.TextField(blank=True)),
                ('waiting_for_input', models.BooleanField(default=False)),
                ('enable_ai_interpretation', models.BooleanField(default=True)),
                ('result_files', models.JSONField(default=list, help_text='List of generated result files')),
                ('error_message', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('started_at', models.DateTimeField(blank=True, null=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('dataset', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='analysis_jobs', to='rnaseq.rnaseqdataset')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rnaseq_jobs', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='AIInterpretation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('analysis_type', models.CharField(choices=[('pca_clustering', 'PCA and Clustering'), ('differential_expression', 'Differential Expression'), ('pathway_enrichment', 'Pathway Enrichment'), ('cell_clustering', 'Cell Clustering'), ('cell_type_annotation', 'Cell Type Annotation'), ('quality_control', 'Quality Control')], max_length=50)),
                ('user_input', models.TextField(blank=True, help_text="User's question or hypothesis")),
                ('ai_response', models.TextField(help_text='AI-generated interpretation')),
                ('context_data', models.JSONField(default=dict, help_text='Analysis data used for interpretation')),
                ('confidence_score', models.FloatField(default=0.0, help_text='AI confidence in interpretation')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('job', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ai_interpretations', to='rnaseq.analysisjob')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='RNASeqPresentation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slide_order', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('dataset', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='rnaseq.rnaseqdataset')),
                ('presentation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.presentation')),
            ],
            options={
                'ordering': ['slide_order'],
                'unique_together': {('dataset', 'presentation')},
            },
        ),
        migrations.CreateModel(
            name='RNASeqPathwayResult',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pathway_id', models.CharField(max_length=100)),
                ('pathway_name', models.CharField(max_length=255)),
                ('database', models.CharField(choices=[('GO', 'Gene Ontology'), ('KEGG', 'KEGG'), ('REACTOME', 'Reactome')], max_length=50)),
                ('p_value', models.FloatField()),
                ('adjusted_p_value', models.FloatField()),
                ('gene_count', models.IntegerField()),
                ('gene_list', models.JSONField(default=list)),
                ('enrichment_score', models.FloatField(blank=True, null=True)),
                ('dataset', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pathway_results', to='rnaseq.rnaseqdataset')),
            ],
            options={
                'unique_together': {('dataset', 'pathway_id', 'database')},
            },
        ),
        migrations.CreateModel(
            name='RNASeqCluster',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cluster_id', models.CharField(max_length=50)),
                ('cluster_name', models.CharField(blank=True, max_length=100)),
                ('cell_type', models.CharField(blank=True, max_length=100)),
                ('cell_count', models.IntegerField(default=0)),
                ('marker_genes', models.JSONField(default=list)),
                ('coordinates', models.JSONField(default=dict, help_text='UMAP/tSNE coordinates')),
                ('dataset', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='clusters', to='rnaseq.rnaseqdataset')),
            ],
            options={
                'unique_together': {('dataset', 'cluster_id')},
            },
        ),
        migrations.CreateModel(
            name='RNASeqAnalysisResult',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('gene_id', models.CharField(max_length=100)),
                ('gene_name', models.CharField(blank=True, max_length=100)),
                ('log2_fold_change', models.FloatField(blank=True, null=True)),
                ('p_value', models.FloatField(blank=True, null=True)),
                ('adjusted_p_value', models.FloatField(blank=True, null=True)),
                ('base_mean', models.FloatField(blank=True, null=True)),
                ('chromosome', models.CharField(blank=True, max_length=10)),
                ('gene_type', models.CharField(blank=True, max_length=50)),
                ('description', models.TextField(blank=True)),
                ('cluster', models.CharField(blank=True, max_length=50)),
                ('cell_type', models.CharField(blank=True, max_length=100)),
                ('avg_log2fc', models.FloatField(blank=True, null=True)),
                ('pct_1', models.FloatField(blank=True, null=True)),
                ('pct_2', models.FloatField(blank=True, null=True)),
                ('dataset', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='analysis_results', to='rnaseq.rnaseqdataset')),
            ],
            options={
                'indexes': [models.Index(fields=['gene_id'], name='rnaseq_rnas_gene_id_f99595_idx'), models.Index(fields=['p_value'], name='rnaseq_rnas_p_value_615615_idx'), models.Index(fields=['log2_fold_change'], name='rnaseq_rnas_log2_fo_bee44f_idx'), models.Index(fields=['cluster'], name='rnaseq_rnas_cluster_0e7462_idx')],
                'unique_together': {('dataset', 'gene_id', 'cluster')},
            },
        ),
        migrations.CreateModel(
            name='PipelineStep',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('step_number', models.IntegerField()),
                ('step_name', models.CharField(max_length=200)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('running', 'Running'), ('completed', 'Completed'), ('failed', 'Failed')], default='pending', max_length=20)),
                ('input_files', models.JSONField(default=list)),
                ('output_files', models.JSONField(default=list)),
                ('parameters', models.JSONField(default=dict)),
                ('metrics', models.JSONField(default=dict)),
                ('started_at', models.DateTimeField(blank=True, null=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('duration_seconds', models.IntegerField(default=0)),
                ('error_message', models.TextField(blank=True)),
                ('retry_count', models.IntegerField(default=0)),
                ('job', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pipeline_steps', to='rnaseq.analysisjob')),
            ],
            options={
                'ordering': ['step_number'],
                'unique_together': {('job', 'step_number')},
            },
        ),
    ]
